---
upgrade:
  - |
    In conjunction with the change to the ``evaluation_mode`` argument in the model classes, the
    :class:`.Solver` class has been updated to take the ``array_library`` constructor argument, as
    well as the ``vectorized`` constructor argument (for use when Lindblad terms are present).
  - |
    The logic in :meth:`.Solver.solve` for automatic ``jit`` compiling when using JAX and simulating
    a list of schedules has been updated to no longer be based on when
    ``Array.default_backend() == "jax"``. The attempted automatic ``jit`` compiling in this case
    is now based only when whether either ``method="jax_odeint"``, or ``method`` is a Diffrax
    integration method. A warning will be raised if the ``array_library`` is not known to be
    compatible with the compilation routine. (For now, ``"scipy_sparse"`` is the only
    ``array_library`` not compatible with this routine, however a warning will still be raised if
    no explicit ``array_library`` is provided, as in this case the JAX-compatibility is unknown.)